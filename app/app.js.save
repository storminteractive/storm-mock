const jsonServer = require('json-server')
const ip = require('ip');
const os = require("os");
const fs = require('fs');
const fileUpload = require('express-fileupload');

const ipAddress = ip.address();
const server = jsonServer.create()
const router = jsonServer.router('/db.json')
const dbjson = require('../db.json')
const middlewares = jsonServer.defaults()
const hostname = os.hostname();


server.use(fileUpload());

server.post('/upload', function(req, res) {
  if (!req.files || Object.keys(req.files).length === 0) {
    return res.status(400).send('No files were uploaded.');
  }

  // The name of the input field (i.e. "sampleFile") is used to retrieve the uploaded file
  let myFile = req.files.myFile;

  // Use the mv() method to place the file somewhere on your server
  myFile.mv(`/app/public/${myFile.name}`, function(err) {
    if (err)
      return res.status(500).send(err);

    res.send('File uploaded!');
  });
});

server.use('/ping',(req,res,next) => {
//  console.log(req);
  res.send(`Hostname: ${hostname} IP: ${ipAddress}`);
//  next();
})

server.get('/upload',(req,res,next) => {
  let o = "";
  let f = fs.readdirSync('/app/public');
  f.forEach(file => { 
    o += file+"<br>\n";
  });
  res.send(o);})

server.use(middlewares)
server.use(router)

server.listen(3000, () => {
  console.log('JSON Server is running on port 3000');
  console.log(JSON.stringify(dbjson,null,' '));
})
